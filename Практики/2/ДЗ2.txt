def make_stat(filename):
    """
    ‘ункци€ вычисл€ет статистику по именам за каждый год с учЄтом пола.
    """
    pass


def extract_years(stat):
    """
    ‘ункци€ принимает на вход вычисленную статистику и выдаЄт список годов,
    упор€доченный по возрастанию.
    """
    pass


def extract_general(stat):
    """
    ‘ункци€ принимает на вход вычисленную статистику и выдаЄт список tuple'ов
    (им€, количество) общей статистики дл€ всех имЄн.
    —писок должен быть отсортирован по убыванию количества.
    """
    pass


def extract_general_male(stat):
    """
    ‘ункци€ принимает на вход вычисленную статистику и выдаЄт список tuple'ов
    (им€, количество) общей статистики дл€ имЄн мальчиков.
    —писок должен быть отсортирован по убыванию количества.
    """
    pass


def extract_general_female(stat):
    """
    ‘ункци€ принимает на вход вычисленную статистику и выдаЄт список tuple'ов
    (им€, количество) общей статистики дл€ имЄн девочек.
    —писок должен быть отсортирован по убыванию количества.
    """
    pass


def extract_year(stat, year):
    """
    ‘ункци€ принимает на вход вычисленную статистику и год.
    –езультат Ч список tuple'ов (им€, количество) общей статистики дл€ всех
    имЄн в указанном году.
    —писок должен быть отсортирован по убыванию количества.
    """
    pass


def extract_year_male(stat, year):
    """
    ‘ункци€ принимает на вход вычисленную статистику и год.
    –езультат Ч список tuple'ов (им€, количество) общей статистики дл€ всех
    имЄн мальчиков в указанном году.
    —писок должен быть отсортирован по убыванию количества.
    """
    pass


def extract_year_female(stat, year):
    """
    ‘ункци€ принимает на вход вычисленную статистику и год.
    –езультат Ч список tuple'ов (им€, количество) общей статистики дл€ всех
    имЄн девочек в указанном году.
    —писок должен быть отсортирован по убыванию количества.
    """
    pass


if __name__ == '__main__':
    pass